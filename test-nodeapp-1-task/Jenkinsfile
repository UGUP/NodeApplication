pipeline 
{
    agent { label 'Jenkins-server' }
    stages {
        stage('Clone') {
            steps {
                sshagent(['git-cred']) {
                    git branch: 'main',
                    credentialsId: 'git',
                    url: 'git@github.com:UGUP/NodeApplication.git'
                }
            }
        }
       stage('Change directory') {
           steps {
            dir("test-nodeapp-1-task") {
                sh "pwd"
            }  
        }
      } 
      stage('Build a Docker Image'){
        steps {
            sh "docker build -t node-application:v${BUILD_NUMBER} ./test-nodeapp-1-task";
        }
      }

     stage('Push Docker Image to ECR') {
      steps {
        sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 374911492262.dkr.ecr.us-east-1.amazonaws.com"
        sh  "docker tag node-application:v${BUILD_NUMBER} 374911492262.dkr.ecr.us-east-1.amazonaws.com/node-application:v${BUILD_NUMBER}"
        sh "docker push 374911492262.dkr.ecr.us-east-1.amazonaws.com/node-application:v${BUILD_NUMBER}"
      }
    }

     stage("SSH into App host") {
      environment { 
                AN_ACCESS_KEY = credentials('App-Host') 
            }
     steps {
            sh "ssh -i ${AN_ACCESS_KEY}  ubuntu@10.0.2.94"
     }
   }

  stage('Pull latest image from ECR and run Docker container in App host'){
   agent { label 'node-app' }
  steps {
    sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 374911492262.dkr.ecr.us-east-1.amazonaws.com"
    sh "docker pull 374911492262.dkr.ecr.us-east-1.amazonaws.com/node-application:v${BUILD_NUMBER}"
    }
  }

stage('Verify Old Image and run conatiner with new Image'){
  steps{
    script{
      def result = sh(script: "docker inspect --format '{{.State.Running}}' node-application", returnStatus: true)
       sh "echo the vaue of result is ${result}"
      if(result == 0){
         sh "echo i am in if loop"
        sh "docker stop node-application"
        sh "docker rm node-application"
      }
    }
   // sh "docker run -itd --name node-application 374911492262.dkr.ecr.us-east-1.amazonaws.com/node-application:v${BUILD_NUMBER}"
  } 
}


  // stage('Get the older image build number and verify it with new build number') {
  //   agent { label 'node-app' }
  // steps {
  //   script {
  //   def apphost_tags = sh(script: "docker images --format \"{{.CreatedAt}}\t{{.Repository}}:{{.Tag}}\" | sort -r | head -n 1 | awk -v FS=\":\" '{print $NF}' | awk -F \"v\" '{print $NF}'", returnStdout: true).trim()
  //        if(apphost_tag < ${BUILD_NUMBER}){
  //         sh "doker stop node-app"
  //        }
  //        else{
  //          sh "docker run -itd -p 8080:8081  v${BUILD_NUMBER}"
  //        }
  //       }
  //     }
  //   }
  }
}

 
 



